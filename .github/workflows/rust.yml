name: Rust

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
      name: Test
      runs-on: ubuntu-latest
      
      steps:
      - uses: actions/checkout@v2
      - name: Run tests
        run: cargo test --verbose
  format:
    name: Format
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    - name: Format Code
      run: cargo fmt --all -- --check
  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        components: clippy
        override: true
    - uses: actions-rs/clippy-check@v1.0.7
      with:
        name: Clippy Lint
        token: ${{ secrets.GITHUB_TOKEN }}
  
  coverage:
      name: Code Coverage
      runs-on: ubuntu-latest
      
      steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Install Tarpaulin
        uses: actions-rs/cargo@v1.0.1
        with:
          command: install 
          args: cargo-tarpaulin
  
      - name: Run Cargo Tarpaulin
        run: cargo tarpaulin --ignore-tests

  hadolint:
  
    name: Lint Dockerfile
    runs-on: ubuntu-latest
    
    steps:
      - name: Hadolint Action
        uses: brpaz/hadolint-action@v1.2.1
  
  scan:
    name: Scan Image
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        
      - name: Build an image from Dockerfile
        run: |
          docker build -t docker.io/mansong/rust-api:${{ github.sha }} .
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'docker.io/my-organization/my-app:${{ github.sha }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'